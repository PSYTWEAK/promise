{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/App.js\";\nimport React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PromController from \"./contracts/PromController.json\";\nimport token from \"./contracts/Token1.json\";\nimport getWeb3 from \"./getWeb3\";\nimport ConnectWallet from \"./components/ConnectWallet.js\";\nimport CreatePromise from \"./pages/CreatePromise.js\";\nimport FindPromise from \"./pages/FindPromise.js\";\nimport \"./App.css\";\nexport default function App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        web3 = _useState2[0],\n        setWeb3 = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        account = _useState4[0],\n        setAccount = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        prom = _useState6[0],\n        setProm = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tokenAddressA = _useState8[0],\n        setTokenAddressA = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        tokenAddressB = _useState10[0],\n        setTokenAddressB = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        amountA = _useState12[0],\n        setAmountB = _useState12[1];\n\n  const componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = PromController.networks[networkId];\n      setProm(new web3.eth.Contract(PromController.abi, deployedNetwork && deployedNetwork.address));\n      setAccount(accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n      console.error(error);\n    }\n  };\n\n  async function approve(conAddr, amount) {\n    token = await new web3.eth.Contract(token.abi, conAddr);\n    await token.methods.approve(prom.address, (2 ** 256).toLocaleString(\"fullwide\", {\n      useGrouping: false\n    })).send({\n      from: account\n    }).then(result => {\n      console.log(\"Approved token\" + conAddr);\n    });\n  }\n\n  async function getAccount() {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    }).then(result => {\n      setAccount(result[0]);\n    });\n  }\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Promise \\uD83E\\uDD1D\"), React.createElement(ConnectWallet, {\n    getAccount: () => getAccount(),\n    account: account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/Create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Create Promise\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/Find\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Find Promise\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/Create\",\n    exact: true,\n    render: props => React.createElement(CreatePromise, {\n      setTokenAddressA: () => setTokenAddressA(),\n      setTokenAddressA: () => setTokenAddressA(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Find\",\n    exact: true,\n    render: props => React.createElement(FindPromise, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/App.js"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","PromController","token","getWeb3","ConnectWallet","CreatePromise","FindPromise","App","web3","setWeb3","account","setAccount","prom","setProm","tokenAddressA","setTokenAddressA","tokenAddressB","setTokenAddressB","amountA","setAmountB","componentDidMount","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","error","alert","console","approve","conAddr","amount","methods","toLocaleString","useGrouping","send","from","then","result","log","getAccount","window","ethereum","request","method","props"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PromController from \"./contracts/PromController.json\";\nimport token from \"./contracts/Token1.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport ConnectWallet from \"./components/ConnectWallet.js\";\nimport CreatePromise from \"./pages/CreatePromise.js\";\nimport FindPromise from \"./pages/FindPromise.js\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [prom, setProm] = useState(null);\n  const [tokenAddressA, setTokenAddressA] = useState(null);\n  const [tokenAddressB, setTokenAddressB] = useState(null);\n  const [amountA, setAmountB] = useState(null);\n\n  const componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = PromController.networks[networkId];\n\n      setProm(new web3.eth.Contract(PromController.abi, deployedNetwork && deployedNetwork.address));\n\n      setAccount(accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  };\n\n  async function approve(conAddr, amount) {\n    token = await new web3.eth.Contract(token.abi, conAddr);\n    await token.methods\n      .approve(prom.address, (2 ** 256).toLocaleString(\"fullwide\", { useGrouping: false }))\n      .send({ from: account })\n      .then((result) => {\n        console.log(\"Approved token\" + conAddr);\n      });\n  }\n\n  async function getAccount() {\n    await window.ethereum\n      .request({\n        method: \"eth_requestAccounts\",\n      })\n      .then((result) => {\n        setAccount(result[0]);\n      });\n  }\n\n  return (\n    <Router>\n      <div class=\"App\">\n        <h1>Promise 🤝</h1>\n        <ConnectWallet getAccount={() => getAccount()} account={account} />\n        <Link to=\"/Create\">Create Promise</Link>\n        <br />\n        <Link to=\"/Find\">Find Promise</Link>\n        <Switch>\n          <Route\n            path=\"/Create\"\n            exact\n            render={(props) => (\n              <CreatePromise setTokenAddressA={() => setTokenAddressA()} setTokenAddressA={() => setTokenAddressA()} />\n            )}\n          />\n          <Route path=\"/Find\" exact render={(props) => <FindPromise />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/pages/FindPromise.js\";\nimport React, { useState } from \"react\";\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\nexport default function FindPromise({\n  prom,\n  assetA,\n  assetB\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        pairID = _useState2[0],\n        setPairID = _useState2[1];\n\n  async function getPairID() {\n    props.setPairID((await prom.methods.getJoinablePromises(assetA, assetB).call()));\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await props.prom.methods.getJoinablePromises().call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await prom.methods.getPromise(a).call();\n      joinablePromises.push(p);\n    }\n\n    setJoinablePromises(joinablePromises);\n    setActivePromises((await prom.methods.getActivePromises().call()));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(TokenAddressInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(TableOfPromises, {\n    joinablePromises: props.joinablePromises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/pages/FindPromise.js"],"names":["React","useState","TableOfPromises","TokenAddressInput","FindPromise","prom","assetA","assetB","pairID","setPairID","getPairID","props","methods","getJoinablePromises","call","getAllPromises","promiseIds","joinablePromises","i","length","a","toString","p","getPromise","push","setJoinablePromises","setActivePromises","getActivePromises"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAArB,EAA+C;AAAA,oBAChCN,QAAQ,CAAC,IAAD,CADwB;AAAA;AAAA,QACrDO,MADqD;AAAA,QAC7CC,SAD6C;;AAE5D,iBAAeC,SAAf,GAA2B;AACzBC,IAAAA,KAAK,CAACF,SAAN,EAAgB,MAAMJ,IAAI,CAACO,OAAL,CAAaC,mBAAb,CAAiCP,MAAjC,EAAyCC,MAAzC,EAAiDO,IAAjD,EAAtB;AACD;;AACD,iBAAeC,cAAf,GAAgC;AAC9B,QAAIC,UAAU,GAAG,MAAML,KAAK,CAACN,IAAN,CAAWO,OAAX,CAAmBC,mBAAnB,GAAyCC,IAAzC,EAAvB;AACA,QAAIG,gBAAgB,GAAG,EAAvB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAIE,CAAC,GAAGJ,UAAU,CAACE,CAAD,CAAV,CAAcG,QAAd,EAAR;AACA,UAAIC,CAAC,GAAG,MAAMjB,IAAI,CAACO,OAAL,CAAaW,UAAb,CAAwBH,CAAxB,EAA2BN,IAA3B,EAAd;AAEAG,MAAAA,gBAAgB,CAACO,IAAjB,CAAsBF,CAAtB;AACD;;AAEDG,IAAAA,mBAAmB,CAACR,gBAAD,CAAnB;AACAS,IAAAA,iBAAiB,EAAC,MAAMrB,IAAI,CAACO,OAAL,CAAae,iBAAb,GAAiCb,IAAjC,EAAP,EAAjB;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,gBAAgB,EAAEH,KAAK,CAACM,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState } from \"react\";\n\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\n\nexport default function FindPromise({ prom, assetA, assetB }) {\n  const [pairID, setPairID] = useState(null);\n  async function getPairID() {\n    props.setPairID(await prom.methods.getJoinablePromises(assetA, assetB).call());\n  }\n  async function getAllPromises() {\n    var promiseIds = await props.prom.methods.getJoinablePromises().call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await prom.methods.getPromise(a).call();\n\n      joinablePromises.push(p);\n    }\n\n    setJoinablePromises(joinablePromises);\n    setActivePromises(await prom.methods.getActivePromises().call());\n  }\n  return (\n    <div>\n      <TokenAddressInput />\n      <TableOfPromises joinablePromises={props.joinablePromises} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
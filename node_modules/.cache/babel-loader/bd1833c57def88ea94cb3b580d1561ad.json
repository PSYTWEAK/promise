{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/components/ConnectWallet.js\";\nimport React, { useState } from \"react\";\nimport \"../CSS/card.css\";\nexport default function ConnectWallet(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        walletConnected = _useState2[0],\n        setWalletConnected = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        address = _useState4[0],\n        setAddress = _useState4[1];\n\n  function readableAddress(address) {\n    var addressChunks = [];\n    var addressWithout0x = address.replace(\"0x\", \"\");\n\n    for (var i = 0; i < addressWithout0x.length; i += 4) {\n      addressChunks.push(addressWithout0x.substring(i, i + 4));\n    }\n\n    return \"0x\".concat(addressChunks[0], \"....\").concat(addressChunks[addressChunks.length - 1]);\n  }\n\n  if (props.addr) {\n    return React.createElement(\"div\", {\n      class: \"card\",\n      onClick: props.getAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, readableAddress(props.addr)));\n  }\n\n  if (!props.addr) {\n    return React.createElement(\"div\", {\n      class: \"card\",\n      onClick: props.getAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Connect\"));\n  }\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/components/ConnectWallet.js"],"names":["React","useState","ConnectWallet","props","walletConnected","setWalletConnected","address","setAddress","readableAddress","addressChunks","addressWithout0x","replace","i","length","push","substring","addr","getAccount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,oBACGF,QAAQ,CAAC,KAAD,CADX;AAAA;AAAA,QACpCG,eADoC;AAAA,QACnBC,kBADmB;;AAAA,qBAEbJ,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,QAEpCK,OAFoC;AAAA,QAE3BC,UAF2B;;AAI3C,WAASC,eAAT,CAAyBF,OAAzB,EAAkC;AAChC,QAAIG,aAAa,GAAG,EAApB;AACA,QAAIC,gBAAgB,GAAGJ,OAAO,CAACK,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAvB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,gBAAgB,CAACG,MAArC,EAA6CD,CAAC,IAAI,CAAlD,EAAqD;AACnDH,MAAAA,aAAa,CAACK,IAAd,CAAmBJ,gBAAgB,CAACK,SAAjB,CAA2BH,CAA3B,EAA8BA,CAAC,GAAG,CAAlC,CAAnB;AACD;;AACD,uBAAYH,aAAa,CAAC,CAAD,CAAzB,iBAAmCA,aAAa,CAACA,aAAa,CAACI,MAAd,GAAuB,CAAxB,CAAhD;AACD;;AAED,MAAIV,KAAK,CAACa,IAAV,EAAgB;AACd,WACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAEb,KAAK,CAACc,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,eAAe,CAACL,KAAK,CAACa,IAAP,CAAnB,CADF,CADF;AAKD;;AAED,MAAI,CAACb,KAAK,CAACa,IAAX,EAAiB;AACf,WACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAEb,KAAK,CAACc,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;AACF","sourcesContent":["import React, { useState } from \"react\";\nimport \"../CSS/card.css\";\nexport default function ConnectWallet(props) {\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [address, setAddress] = useState(\"\");\n\n  function readableAddress(address) {\n    var addressChunks = [];\n    var addressWithout0x = address.replace(\"0x\", \"\");\n\n    for (var i = 0; i < addressWithout0x.length; i += 4) {\n      addressChunks.push(addressWithout0x.substring(i, i + 4));\n    }\n    return `0x${addressChunks[0]}....${addressChunks[addressChunks.length - 1]}`;\n  }\n\n  if (props.addr) {\n    return (\n      <div class=\"card\" onClick={props.getAccount}>\n        <p>{readableAddress(props.addr)}</p>\n      </div>\n    );\n  }\n\n  if (!props.addr) {\n    return (\n      <div class=\"card\" onClick={props.getAccount}>\n        <p>Connect</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
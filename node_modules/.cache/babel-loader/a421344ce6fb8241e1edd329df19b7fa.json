{"ast":null,"code":"var _jsxFileName = \"/Users/nanoissuperior/prom/client/src/components/ConnectWallet.js\";\nimport React, { useState } from \"react\";\nexport default function ConnectWallet(props) {\n  function readableAddress(address) {\n    var addressChunks = [];\n    var addressWithout0x = address.replace(\"0x\", \"\");\n\n    for (var i = 0; i < addressWithout0x.length; i += 4) {\n      addressChunks.push(addressWithout0x.substring(i, i + 4));\n    }\n\n    return \"0x\".concat(addressChunks[0], \"....\").concat(addressChunks[addressChunks.length - 1]);\n  }\n\n  if (props.account) {\n    return React.createElement(\"div\", {\n      class: \"card\",\n      onClick: props.getAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, readableAddress(props.account)));\n  } else if (!props.account) {\n    return React.createElement(\"div\", {\n      class: \"card\",\n      onClick: props.getAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Connect\"));\n  }\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/components/ConnectWallet.js"],"names":["React","useState","ConnectWallet","props","readableAddress","address","addressChunks","addressWithout0x","replace","i","length","push","substring","account","getAccount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,WAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,gBAAgB,GAAGF,OAAO,CAACG,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAvB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,gBAAgB,CAACG,MAArC,EAA6CD,CAAC,IAAI,CAAlD,EAAqD;AACnDH,MAAAA,aAAa,CAACK,IAAd,CAAmBJ,gBAAgB,CAACK,SAAjB,CAA2BH,CAA3B,EAA8BA,CAAC,GAAG,CAAlC,CAAnB;AACD;;AACD,uBAAYH,aAAa,CAAC,CAAD,CAAzB,iBAAmCA,aAAa,CAACA,aAAa,CAACI,MAAd,GAAuB,CAAxB,CAAhD;AACD;;AAED,MAAIP,KAAK,CAACU,OAAV,EAAmB;AACjB,WACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAEV,KAAK,CAACW,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASV,eAAe,CAACD,KAAK,CAACU,OAAP,CAAxB,CADF,CADF;AAKD,GAND,MAMO,IAAI,CAACV,KAAK,CAACU,OAAX,EAAoB;AACzB,WACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAEV,KAAK,CAACW,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD;AACF","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function ConnectWallet(props) {\n  function readableAddress(address) {\n    var addressChunks = [];\n    var addressWithout0x = address.replace(\"0x\", \"\");\n\n    for (var i = 0; i < addressWithout0x.length; i += 4) {\n      addressChunks.push(addressWithout0x.substring(i, i + 4));\n    }\n    return `0x${addressChunks[0]}....${addressChunks[addressChunks.length - 1]}`;\n  }\n\n  if (props.account) {\n    return (\n      <div class=\"card\" onClick={props.getAccount}>\n        <button>{readableAddress(props.account)}</button>\n      </div>\n    );\n  } else if (!props.account) {\n    return (\n      <div class=\"card\" onClick={props.getAccount}>\n        <button>Connect</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/pages/FindPromise.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\nexport default function FindPromise({\n  web3,\n  promInstance,\n  assetA,\n  assetB,\n  setAmountA,\n  setAmountB,\n  assetAInstance,\n  assetBInstance,\n  createTokenInstance,\n  checkAllowance,\n  checkBalance\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        pairID = _useState2[0],\n        setPairID = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        joinablePromises = _useState4[0],\n        setJoinablePromises = _useState4[1];\n\n  useEffect(() => {\n    if (assetB) {\n      if (assetBInstance) {\n        checkBalance(\"B\");\n        checkAllowance(\"B\");\n      } else if (web3.utils.isAddress(assetB)) {\n        createTokenInstance(\"B\");\n      }\n    }\n\n    if (assetA) {\n      if (assetAInstance) {\n        checkBalance(\"A\");\n        checkAllowance(\"A\");\n      } else if (web3.utils.isAddress(assetA)) {\n        createTokenInstance(\"A\");\n      }\n    }\n\n    if (assetAInstance && assetBInstance) {\n      getAllPromises();\n    }\n  }, [assetB, amountB]);\n\n  async function getPairID() {\n    setPairID((await prom.methods.getJoinablePromises(assetA, assetB).call()));\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await prom.methods.getJoinablePromises(assetA, assetB).call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await prom.methods.getPromise(a).call();\n      joinablePromises.push(p);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TokenAddressInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(TableOfPromises, {\n    joinablePromises: joinablePromises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/pages/FindPromise.js"],"names":["React","useState","useEffect","TableOfPromises","TokenAddressInput","FindPromise","web3","promInstance","assetA","assetB","setAmountA","setAmountB","assetAInstance","assetBInstance","createTokenInstance","checkAllowance","checkBalance","pairID","setPairID","joinablePromises","setJoinablePromises","utils","isAddress","getAllPromises","amountB","getPairID","prom","methods","getJoinablePromises","call","promiseIds","i","length","a","toString","p","getPromise","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,IADkC;AAElCC,EAAAA,YAFkC;AAGlCC,EAAAA,MAHkC;AAIlCC,EAAAA,MAJkC;AAKlCC,EAAAA,UALkC;AAMlCC,EAAAA,UANkC;AAOlCC,EAAAA,cAPkC;AAQlCC,EAAAA,cARkC;AASlCC,EAAAA,mBATkC;AAUlCC,EAAAA,cAVkC;AAWlCC,EAAAA;AAXkC,CAArB,EAYZ;AAAA,oBAC2Bf,QAAQ,CAAC,IAAD,CADnC;AAAA;AAAA,QACMgB,MADN;AAAA,QACcC,SADd;;AAAA,qBAE+CjB,QAAQ,CAAC,IAAD,CAFvD;AAAA;AAAA,QAEMkB,gBAFN;AAAA,QAEwBC,mBAFxB;;AAIDlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAJ,EAAY;AACV,UAAII,cAAJ,EAAoB;AAClBG,QAAAA,YAAY,CAAC,GAAD,CAAZ;AACAD,QAAAA,cAAc,CAAC,GAAD,CAAd;AACD,OAHD,MAGO,IAAIT,IAAI,CAACe,KAAL,CAAWC,SAAX,CAAqBb,MAArB,CAAJ,EAAkC;AACvCK,QAAAA,mBAAmB,CAAC,GAAD,CAAnB;AACD;AACF;;AACD,QAAIN,MAAJ,EAAY;AACV,UAAII,cAAJ,EAAoB;AAClBI,QAAAA,YAAY,CAAC,GAAD,CAAZ;AACAD,QAAAA,cAAc,CAAC,GAAD,CAAd;AACD,OAHD,MAGO,IAAIT,IAAI,CAACe,KAAL,CAAWC,SAAX,CAAqBd,MAArB,CAAJ,EAAkC;AACvCM,QAAAA,mBAAmB,CAAC,GAAD,CAAnB;AACD;AACF;;AACD,QAAIF,cAAc,IAAIC,cAAtB,EAAsC;AACpCU,MAAAA,cAAc;AACf;AACF,GApBQ,EAoBN,CAACd,MAAD,EAASe,OAAT,CApBM,CAAT;;AAsBA,iBAAeC,SAAf,GAA2B;AACzBP,IAAAA,SAAS,EAAC,MAAMQ,IAAI,CAACC,OAAL,CAAaC,mBAAb,CAAiCpB,MAAjC,EAAyCC,MAAzC,EAAiDoB,IAAjD,EAAP,EAAT;AACD;;AAED,iBAAeN,cAAf,GAAgC;AAC9B,QAAIO,UAAU,GAAG,MAAMJ,IAAI,CAACC,OAAL,CAAaC,mBAAb,CAAiCpB,MAAjC,EAAyCC,MAAzC,EAAiDoB,IAAjD,EAAvB;AACA,QAAIV,gBAAgB,GAAG,EAAvB;;AAEA,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAIE,CAAC,GAAGH,UAAU,CAACC,CAAD,CAAV,CAAcG,QAAd,EAAR;AACA,UAAIC,CAAC,GAAG,MAAMT,IAAI,CAACC,OAAL,CAAaS,UAAb,CAAwBH,CAAxB,EAA2BJ,IAA3B,EAAd;AAEAV,MAAAA,gBAAgB,CAACkB,IAAjB,CAAsBF,CAAtB;AACD;;AAEDf,IAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,gBAAgB,EAAEA,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\n\nexport default function FindPromise({\n  web3,\n  promInstance,\n  assetA,\n  assetB,\n  setAmountA,\n  setAmountB,\n  assetAInstance,\n  assetBInstance,\n  createTokenInstance,\n  checkAllowance,\n  checkBalance,\n}) {\n  const [pairID, setPairID] = useState(null);\n  const [joinablePromises, setJoinablePromises] = useState(null);\n\n  useEffect(() => {\n    if (assetB) {\n      if (assetBInstance) {\n        checkBalance(\"B\");\n        checkAllowance(\"B\");\n      } else if (web3.utils.isAddress(assetB)) {\n        createTokenInstance(\"B\");\n      }\n    }\n    if (assetA) {\n      if (assetAInstance) {\n        checkBalance(\"A\");\n        checkAllowance(\"A\");\n      } else if (web3.utils.isAddress(assetA)) {\n        createTokenInstance(\"A\");\n      }\n    }\n    if (assetAInstance && assetBInstance) {\n      getAllPromises();\n    }\n  }, [assetB, amountB]);\n\n  async function getPairID() {\n    setPairID(await prom.methods.getJoinablePromises(assetA, assetB).call());\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await prom.methods.getJoinablePromises(assetA, assetB).call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await prom.methods.getPromise(a).call();\n\n      joinablePromises.push(p);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n  return (\n    <div>\n      <TokenAddressInput />\n      <TableOfPromises joinablePromises={joinablePromises} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
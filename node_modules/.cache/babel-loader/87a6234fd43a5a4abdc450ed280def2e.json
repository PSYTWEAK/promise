{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/App.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport PromController from \"./contracts/PromController.json\";\nimport token from \"./contracts/Token1.json\";\nimport getWeb3 from \"./getWeb3\";\nimport ConnectWallet from \"./components/ConnectWallet.js\";\nimport CreatePromise from \"./pages/CreatePromise.js\";\nimport FindPromise from \"./pages/FindPromise.js\";\nimport \"./App.css\";\nimport { checkServerIdentity } from \"tls\";\nexport default function App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        web3 = _useState2[0],\n        setWeb3 = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        account = _useState4[0],\n        setAccount = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        prom = _useState6[0],\n        setProm = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        assetA = _useState8[0],\n        setAssetA = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        assetB = _useState10[0],\n        setAssetB = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        amountA = _useState12[0],\n        setAmountA = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        amountB = _useState14[0],\n        setAmountB = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        time = _useState16[0],\n        setTime = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        assetInstance = _useState18[0],\n        setAssetInstance = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        assetADeclimals = _useState20[0],\n        setAssetADeclimals = _useState20[1];\n\n  const _useState21 = useState(null),\n        _useState22 = _slicedToArray(_useState21, 2),\n        approved = _useState22[0],\n        setApproved = _useState22[1];\n\n  const _useState23 = useState(null),\n        _useState24 = _slicedToArray(_useState23, 2),\n        balanceAssetA = _useState24[0],\n        setBalanceAssetA = _useState24[1];\n\n  const _useState25 = useState(null),\n        _useState26 = _slicedToArray(_useState25, 2),\n        joinablePromises = _useState26[0],\n        setJoinablePromises = _useState26[1];\n\n  const _useState27 = useState(null),\n        _useState28 = _slicedToArray(_useState27, 2),\n        activePromises = _useState28[0],\n        setActivePromises = _useState28[1];\n\n  const _useState29 = useState(null),\n        _useState30 = _slicedToArray(_useState29, 2),\n        pairID = _useState30[0],\n        setPairID = _useState30[1];\n\n  const setUpWeb3 = async () => {\n    try {\n      const _web3 = await getWeb3();\n\n      const accounts = await _web3.eth.getAccounts();\n      const networkId = await _web3.eth.net.getId();\n      const deployedNetwork = PromController.networks[networkId];\n      setProm(new _web3.eth.Contract(PromController.abi, deployedNetwork && deployedNetwork.address));\n      setWeb3(_web3);\n      setAccount(accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n      console.error(error);\n    }\n  };\n\n  setUpWeb3();\n\n  async function getAccount() {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    }).then(result => {\n      setAccount(result[0]);\n    });\n  }\n\n  async function createTokenInstance() {\n    var _assetInstance = new web3.eth.Contract(token.abi, assetA);\n\n    var decimals = await _assetInstance.methods.decimals().call();\n    setAssetInstance(_assetInstance);\n    setAssetADeclimals(decimals);\n  }\n\n  async function checkBalance() {\n    var balanceOf = await assetInstance.methods.balanceOf(account).call();\n    setBalanceAssetA(balanceOf);\n  }\n\n  async function checkAllowance() {\n    var allo = await assetInstance.methods.allowance(account, prom._address).call();\n\n    if (allo >= amountA) {\n      setApproved(true);\n    } else {\n      setApproved(false);\n    }\n  }\n\n  async function approve() {\n    await assetInstance.methods.approve(prom._address, (2 ** 256).toLocaleString(\"fullwide\", {\n      useGrouping: false\n    })).send({\n      from: account\n    }).then(result => {\n      console.log(result);\n      setApproved(true);\n    });\n  }\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Promise \\uD83E\\uDD1D\"), React.createElement(ConnectWallet, {\n    getAccount: () => getAccount(),\n    account: account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/Create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Create Promise\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/Find\",\n    onClick: () => getAllPromises(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Find Promise\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/Create\",\n    exact: true,\n    render: props => React.createElement(CreatePromise, {\n      web3: web3,\n      prom: prom,\n      assetA: assetA,\n      assetB: assetB,\n      amountB: amountB,\n      amountA: amountA,\n      time: time,\n      account: account,\n      setAssetA: a => setAssetA(a),\n      setAssetB: a => setAssetB(a),\n      setAmountA: a => setAmountA(a),\n      setAmountB: a => setAmountB(a),\n      setTime: t => setTime(t),\n      createPromise: () => createPromise(),\n      approve: () => approve(),\n      createTokenInstance: () => createTokenInstance(),\n      checkAllowance: () => checkAllowance(),\n      checkBalance: () => checkBalance(),\n      approved: approved,\n      balanceAssetA: balanceAssetA,\n      assetADeclimals: assetADeclimals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Find\",\n    exact: true,\n    render: props => React.createElement(FindPromise, {\n      joinablePromises: joinablePromises,\n      activePromises: activePromises,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/App.js"],"names":["React","Component","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","useLocation","PromController","token","getWeb3","ConnectWallet","CreatePromise","FindPromise","checkServerIdentity","App","web3","setWeb3","account","setAccount","prom","setProm","assetA","setAssetA","assetB","setAssetB","amountA","setAmountA","amountB","setAmountB","time","setTime","assetInstance","setAssetInstance","assetADeclimals","setAssetADeclimals","approved","setApproved","balanceAssetA","setBalanceAssetA","joinablePromises","setJoinablePromises","activePromises","setActivePromises","pairID","setPairID","setUpWeb3","_web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","error","alert","console","getAccount","window","ethereum","request","method","then","result","createTokenInstance","_assetInstance","decimals","methods","call","checkBalance","balanceOf","checkAllowance","allo","allowance","_address","approve","toLocaleString","useGrouping","send","from","log","getAllPromises","props","a","t","createPromise"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport PromController from \"./contracts/PromController.json\";\nimport token from \"./contracts/Token1.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport ConnectWallet from \"./components/ConnectWallet.js\";\nimport CreatePromise from \"./pages/CreatePromise.js\";\nimport FindPromise from \"./pages/FindPromise.js\";\n\nimport \"./App.css\";\nimport { checkServerIdentity } from \"tls\";\n\nexport default function App() {\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [prom, setProm] = useState(null);\n  const [assetA, setAssetA] = useState(null);\n  const [assetB, setAssetB] = useState(null);\n  const [amountA, setAmountA] = useState(null);\n  const [amountB, setAmountB] = useState(null);\n  const [time, setTime] = useState(null);\n  const [assetInstance, setAssetInstance] = useState(null);\n  const [assetADeclimals, setAssetADeclimals] = useState(null);\n  const [approved, setApproved] = useState(null);\n  const [balanceAssetA, setBalanceAssetA] = useState(null);\n\n  const [joinablePromises, setJoinablePromises] = useState(null);\n  const [activePromises, setActivePromises] = useState(null);\n  const [pairID, setPairID] = useState(null);\n\n  const setUpWeb3 = async () => {\n    try {\n      const _web3 = await getWeb3();\n\n      const accounts = await _web3.eth.getAccounts();\n\n      const networkId = await _web3.eth.net.getId();\n      const deployedNetwork = PromController.networks[networkId];\n\n      setProm(new _web3.eth.Contract(PromController.abi, deployedNetwork && deployedNetwork.address));\n      setWeb3(_web3);\n      setAccount(accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  };\n  setUpWeb3();\n\n  async function getAccount() {\n    await window.ethereum\n      .request({\n        method: \"eth_requestAccounts\",\n      })\n      .then((result) => {\n        setAccount(result[0]);\n      });\n  }\n  async function createTokenInstance() {\n    var _assetInstance = new web3.eth.Contract(token.abi, assetA);\n    var decimals = await _assetInstance.methods.decimals().call();\n    setAssetInstance(_assetInstance);\n    setAssetADeclimals(decimals);\n  }\n\n  async function checkBalance() {\n    var balanceOf = await assetInstance.methods.balanceOf(account).call();\n    setBalanceAssetA(balanceOf);\n  }\n\n  async function checkAllowance() {\n    var allo = await assetInstance.methods.allowance(account, prom._address).call();\n    if (allo >= amountA) {\n      setApproved(true);\n    } else {\n      setApproved(false);\n    }\n  }\n\n  async function approve() {\n    await assetInstance.methods\n      .approve(prom._address, (2 ** 256).toLocaleString(\"fullwide\", { useGrouping: false }))\n      .send({ from: account })\n      .then((result) => {\n        console.log(result);\n        setApproved(true);\n      });\n  }\n\n  return (\n    <Router>\n      <div class=\"App\">\n        <h1>Promise 🤝</h1>\n        <ConnectWallet getAccount={() => getAccount()} account={account} />\n        <Link to=\"/Create\">Create Promise</Link>\n        <br />\n        <Link to=\"/Find\" onClick={() => getAllPromises()}>\n          Find Promise\n        </Link>\n        <Switch>\n          <Route\n            path=\"/Create\"\n            exact\n            render={(props) => (\n              <CreatePromise\n                web3={web3}\n                prom={prom}\n                assetA={assetA}\n                assetB={assetB}\n                amountB={amountB}\n                amountA={amountA}\n                time={time}\n                account={account}\n                setAssetA={(a) => setAssetA(a)}\n                setAssetB={(a) => setAssetB(a)}\n                setAmountA={(a) => setAmountA(a)}\n                setAmountB={(a) => setAmountB(a)}\n                setTime={(t) => setTime(t)}\n                createPromise={() => createPromise()}\n                approve={() => approve()}\n                createTokenInstance={() => createTokenInstance()}\n                checkAllowance={() => checkAllowance()}\n                checkBalance={() => checkBalance()}\n                approved={approved}\n                balanceAssetA={balanceAssetA}\n                assetADeclimals={assetADeclimals}\n              />\n            )}\n          />\n          <Route\n            path=\"/Find\"\n            exact\n            render={(props) => <FindPromise joinablePromises={joinablePromises} activePromises={activePromises} />}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
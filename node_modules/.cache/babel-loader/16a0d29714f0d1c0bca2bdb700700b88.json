{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/pages/FindPromise.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\nexport default function FindPromise({\n  web3,\n  promInstance,\n  assetA,\n  assetB,\n  amountA,\n  amountB,\n  setAssetA,\n  setAssetB,\n  setAmountA,\n  setAmountB,\n  assetAInstance,\n  assetBInstance,\n  assetAName,\n  assetBName,\n  getAssetName,\n  createTokenInstance,\n  checkAllowance,\n  checkBalance\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        pairID = _useState2[0],\n        setPairID = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        joinablePromises = _useState4[0],\n        setJoinablePromises = _useState4[1];\n\n  useEffect(() => {\n    if (assetA && assetB) {\n      if (assetAInstance && assetBInstance) {\n        console.log(\"Bigboy\");\n        getAllPromises();\n        getAssetName(\"A\");\n        getAssetName(\"B\");\n      }\n    }\n\n    if (assetA && !assetAInstance && web3.utils.isAddress(assetA)) {\n      console.log(\"Instance A\");\n      handleCreateTokenInstance(\"A\");\n    }\n\n    if (assetB && !assetBInstance && web3.utils.isAddress(assetB)) {\n      console.log(\"Instance B\");\n      handleCreateTokenInstance(\"B\");\n    }\n  }, [assetA, assetB, assetAInstance, assetBInstance]);\n\n  async function handleCreateTokenInstance(k) {\n    if (k = \"A\") {\n      await createTokenInstance(\"A\");\n    } else {\n      await createTokenInstance(\"B\");\n    }\n  }\n\n  async function getPairID() {\n    setPairID((await promInstance.methods.getJoinablePromises(assetA, assetB).call()));\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await promInstance.methods.getJoinablePromises(assetA, assetB).call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await promInstance.methods.getPromise(a).call();\n      let singlePromise = {\n        _amountA: p[0],\n        _amountB: p[2],\n        _time: p[4]\n      };\n      joinablePromises.push(singlePromise);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TokenAddressInput, {\n    setAssetA: a => setAssetA(a),\n    setAssetB: a => setAssetB(a),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(TableOfPromises, {\n    joinablePromises: joinablePromises,\n    assetAName: assetAName,\n    assetBName: assetBName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/pages/FindPromise.js"],"names":["React","useState","useEffect","TableOfPromises","TokenAddressInput","FindPromise","web3","promInstance","assetA","assetB","amountA","amountB","setAssetA","setAssetB","setAmountA","setAmountB","assetAInstance","assetBInstance","assetAName","assetBName","getAssetName","createTokenInstance","checkAllowance","checkBalance","pairID","setPairID","joinablePromises","setJoinablePromises","console","log","getAllPromises","utils","isAddress","handleCreateTokenInstance","k","getPairID","methods","getJoinablePromises","call","promiseIds","i","length","a","toString","p","getPromise","singlePromise","_amountA","_amountB","_time","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\n\nexport default function FindPromise({\n  web3,\n  promInstance,\n  assetA,\n  assetB,\n  amountA,\n  amountB,\n  setAssetA,\n  setAssetB,\n  setAmountA,\n  setAmountB,\n  assetAInstance,\n  assetBInstance,\n  assetAName,\n  assetBName,\n  getAssetName,\n  createTokenInstance,\n  checkAllowance,\n  checkBalance,\n}) {\n  const [pairID, setPairID] = useState(null);\n  const [joinablePromises, setJoinablePromises] = useState(null);\n\n  useEffect(() => {\n    if (assetA && assetB) {\n      if (assetAInstance && assetBInstance) {\n        console.log(\"Bigboy\");\n        getAllPromises();\n        getAssetName(\"A\");\n        getAssetName(\"B\");\n      }\n    }\n    if (assetA && !assetAInstance && web3.utils.isAddress(assetA)) {\n      console.log(\"Instance A\");\n      handleCreateTokenInstance(\"A\");\n    }\n    if (assetB && !assetBInstance && web3.utils.isAddress(assetB)) {\n      console.log(\"Instance B\");\n      handleCreateTokenInstance(\"B\");\n    }\n  }, [assetA, assetB, assetAInstance, assetBInstance]);\n\n  async function handleCreateTokenInstance(k) {\n    if ((k = \"A\")) {\n      await createTokenInstance(\"A\");\n    } else {\n      await createTokenInstance(\"B\");\n    }\n  }\n\n  async function getPairID() {\n    setPairID(await promInstance.methods.getJoinablePromises(assetA, assetB).call());\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await promInstance.methods.getJoinablePromises(assetA, assetB).call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await promInstance.methods.getPromise(a).call();\n\n      let singlePromise = {\n        _amountA: p[0],\n        _amountB: p[2],\n        _time: p[4],\n      };\n\n      joinablePromises.push(singlePromise);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n  return (\n    <div>\n      <TokenAddressInput setAssetA={(a) => setAssetA(a)} setAssetB={(a) => setAssetB(a)} />\n      <TableOfPromises joinablePromises={joinablePromises} assetAName={assetAName} assetBName={assetBName} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
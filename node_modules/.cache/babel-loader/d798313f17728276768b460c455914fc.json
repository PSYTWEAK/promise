{"ast":null,"code":"var _jsxFileName = \"/Users/nanoissuperior/prom/client/src/components/TableOfPromises.js\";\nimport React from \"react\";\nexport default function TableOfPromises(props) {\n  /*   async function joinablePromises() {\n    return props.joinablePromises.map((promise) => {\n      <tr>\n        <td>{promise[0]}</td>\n        <td>{promise[1]}</td>\n        <td>{promise[2]}</td>\n        <td>{promise[3]}</td>\n        <td>{promise[4]}</td>\n      </tr>;\n    });\n  } */\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Asset A\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Amount A\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Asset B\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Amount B\"));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/components/TableOfPromises.js"],"names":["React","TableOfPromises","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C;;;;;;;;;;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF;AASD","sourcesContent":["import React from \"react\";\n\nexport default function TableOfPromises(props) {\n  /*   async function joinablePromises() {\n    return props.joinablePromises.map((promise) => {\n      <tr>\n        <td>{promise[0]}</td>\n        <td>{promise[1]}</td>\n        <td>{promise[2]}</td>\n        <td>{promise[3]}</td>\n        <td>{promise[4]}</td>\n      </tr>;\n    });\n  } */\n  return (\n    <table>\n      <th>ID</th>\n      <th>Asset A</th>\n      <th>Amount A</th>\n      <th>Asset B</th>\n      <th>Amount B</th>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
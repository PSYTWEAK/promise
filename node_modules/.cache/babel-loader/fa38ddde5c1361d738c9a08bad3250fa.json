{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/App.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport PromController from \"./contracts/PromController.json\";\nimport token from \"./contracts/Token1.json\";\nimport getWeb3 from \"./getWeb3\";\nimport ConnectWallet from \"./components/ConnectWallet.js\";\nimport CreatePromise from \"./pages/CreatePromise.js\";\nimport FindPromise from \"./pages/FindPromise.js\";\nimport \"./App.css\";\nexport default function App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        web3 = _useState2[0],\n        setWeb3 = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        account = _useState4[0],\n        setAccount = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        promInstance = _useState6[0],\n        setPromInstance = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        assetA = _useState8[0],\n        setAssetA = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        assetB = _useState10[0],\n        setAssetB = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        amountA = _useState12[0],\n        setAmountA = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        amountB = _useState14[0],\n        setAmountB = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        assetAInstance = _useState16[0],\n        setAssetAInstance = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        assetBInstance = _useState18[0],\n        setAssetBInstance = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        assetADeclimals = _useState20[0],\n        setAssetADeclimals = _useState20[1];\n\n  const _useState21 = useState(null),\n        _useState22 = _slicedToArray(_useState21, 2),\n        assetBDeclimals = _useState22[0],\n        setAssetBDeclimals = _useState22[1];\n\n  const _useState23 = useState(null),\n        _useState24 = _slicedToArray(_useState23, 2),\n        assetAName = _useState24[0],\n        setAssetAName = _useState24[1];\n\n  const _useState25 = useState(null),\n        _useState26 = _slicedToArray(_useState25, 2),\n        assetBName = _useState26[0],\n        setAssetBName = _useState26[1];\n\n  const _useState27 = useState(null),\n        _useState28 = _slicedToArray(_useState27, 2),\n        time = _useState28[0],\n        setTime = _useState28[1];\n\n  const _useState29 = useState(null),\n        _useState30 = _slicedToArray(_useState29, 2),\n        approved = _useState30[0],\n        setApproved = _useState30[1];\n\n  const _useState31 = useState(null),\n        _useState32 = _slicedToArray(_useState31, 2),\n        balanceAssetA = _useState32[0],\n        setBalanceAssetA = _useState32[1];\n\n  const _useState33 = useState(null),\n        _useState34 = _slicedToArray(_useState33, 2),\n        balanceAssetB = _useState34[0],\n        setBalanceAssetB = _useState34[1];\n\n  const setUpWeb3 = async () => {\n    try {\n      const _web3 = await getWeb3();\n\n      const accounts = await _web3.eth.getAccounts();\n      const networkId = await _web3.eth.net.getId();\n      const deployedNetwork = PromController.networks[networkId];\n      setPromInstance(new _web3.eth.Contract(PromController.abi, deployedNetwork && deployedNetwork.address));\n      setWeb3(_web3);\n      setAccount(accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n      console.error(error);\n    }\n  };\n\n  setUpWeb3();\n  useEffect(() => {\n    if (assetAInstance) {\n      getAssetName(\"A\");\n    }\n\n    if (assetBInstance) {\n      getAssetName(\"B\");\n    }\n  }, [assetAInstance, assetBInstance]);\n\n  async function getAccount() {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    }).then(result => {\n      setAccount(result[0]);\n    });\n  }\n\n  async function createTokenInstance(k) {\n    let assetInstance, decimals, assetName;\n\n    if (k = \"A\") {\n      assetInstance = new web3.eth.Contract(token.abi, assetA);\n    } else {\n      assetInstance = new web3.eth.Contract(token.abi, assetB);\n    }\n\n    decimals = await assetInstance.methods.decimals().call();\n    assetName = await assetInstance.methods.name().call();\n\n    if (k = \"A\") {\n      setAssetAInstance(assetInstance);\n      setAssetADeclimals(decimals);\n      setAssetBName(assetName);\n    } else {\n      setAssetAName(assetName);\n      setAssetBInstance(assetInstance);\n      setAssetBDeclimals(decimals);\n    }\n  }\n\n  async function checkBalance(k) {\n    if (k = \"A\") {\n      var balanceOf = await assetAInstance.methods.balanceOf(account).call();\n      setBalanceAssetA(balanceOf);\n    } else {\n      var balanceOf = await assetBInstance.methods.balanceOf(account).call();\n      setBalanceAssetB(balanceOf);\n    }\n  }\n\n  async function checkAllowance(k) {\n    let allo;\n\n    if (k = \"A\") {\n      allo = await assetAInstance.methods.allowance(account, promInstance._address).call();\n\n      if (allo >= amountA) {\n        setApproved(true);\n      } else {\n        setApproved(false);\n      }\n    } else {\n      allo = await assetBInstance.methods.allowance(account, promInstance._address).call();\n\n      if (allo >= amountB) {\n        setApproved(true);\n      } else {\n        setApproved(false);\n      }\n    }\n  }\n\n  async function approve(k) {\n    if (k = \"A\") {\n      await assetAInstance.methods.approve(promInstance._address, (2 ** 256).toLocaleString(\"fullwide\", {\n        useGrouping: false\n      })).send({\n        from: account\n      }).then(result => {\n        console.log(result);\n        setApproved(true);\n      });\n    } else {\n      await assetBInstance.methods.approve(promInstance._address, (2 ** 256).toLocaleString(\"fullwide\", {\n        useGrouping: false\n      })).send({\n        from: account\n      }).then(result => {\n        console.log(result);\n        setApproved(true);\n      });\n    }\n  }\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Promise \\uD83E\\uDD1D\"), React.createElement(ConnectWallet, {\n    getAccount: () => getAccount(),\n    account: account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/Create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Create Promise\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/Find\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Find Promise\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/Create\",\n    exact: true,\n    render: props => React.createElement(CreatePromise, {\n      web3: web3,\n      promInstance: promInstance,\n      assetA: assetA,\n      assetB: assetB,\n      amountB: amountB,\n      amountA: amountA,\n      time: time,\n      account: account,\n      approved: approved,\n      balanceAssetA: balanceAssetA,\n      assetADeclimals: assetADeclimals,\n      assetAInstance: assetAInstance,\n      setAssetA: a => setAssetA(a),\n      setAssetB: a => setAssetB(a),\n      setAmountA: a => setAmountA(a),\n      setAmountB: a => setAmountB(a),\n      setTime: t => setTime(t),\n      approve: k => approve(k),\n      createTokenInstance: k => createTokenInstance(k),\n      checkAllowance: k => checkAllowance(k),\n      checkBalance: k => checkBalance(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Find\",\n    exact: true,\n    render: props => React.createElement(FindPromise, {\n      web3: web3,\n      promInstance: promInstance,\n      assetA: assetA,\n      assetB: assetB,\n      amountA: amountA,\n      amountB: amountB,\n      setAmountA: a => setAmountA(a),\n      setAmountB: a => setAmountB(a),\n      setAssetA: a => setAssetA(a),\n      setAssetB: a => setAssetB(a),\n      assetAInstance: assetAInstance,\n      assetBInstance: assetBInstance,\n      assetAName: assetAName,\n      assetBName: assetBName,\n      getAssetName: k => getAssetName(k),\n      createTokenInstance: k => createTokenInstance(k),\n      checkAllowance: k => checkAllowance(k),\n      checkBalance: k => checkBalance(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/App.js"],"names":["React","Component","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","useLocation","PromController","token","getWeb3","ConnectWallet","CreatePromise","FindPromise","App","web3","setWeb3","account","setAccount","promInstance","setPromInstance","assetA","setAssetA","assetB","setAssetB","amountA","setAmountA","amountB","setAmountB","assetAInstance","setAssetAInstance","assetBInstance","setAssetBInstance","assetADeclimals","setAssetADeclimals","assetBDeclimals","setAssetBDeclimals","assetAName","setAssetAName","assetBName","setAssetBName","time","setTime","approved","setApproved","balanceAssetA","setBalanceAssetA","balanceAssetB","setBalanceAssetB","setUpWeb3","_web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","error","alert","console","getAssetName","getAccount","window","ethereum","request","method","then","result","createTokenInstance","k","assetInstance","decimals","assetName","methods","call","name","checkBalance","balanceOf","checkAllowance","allo","allowance","_address","approve","toLocaleString","useGrouping","send","from","log","props","a","t"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport PromController from \"./contracts/PromController.json\";\nimport token from \"./contracts/Token1.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport ConnectWallet from \"./components/ConnectWallet.js\";\nimport CreatePromise from \"./pages/CreatePromise.js\";\nimport FindPromise from \"./pages/FindPromise.js\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [promInstance, setPromInstance] = useState(null);\n\n  const [assetA, setAssetA] = useState(null);\n  const [assetB, setAssetB] = useState(null);\n  const [amountA, setAmountA] = useState(null);\n  const [amountB, setAmountB] = useState(null);\n\n  const [assetAInstance, setAssetAInstance] = useState(null);\n  const [assetBInstance, setAssetBInstance] = useState(null);\n  const [assetADeclimals, setAssetADeclimals] = useState(null);\n  const [assetBDeclimals, setAssetBDeclimals] = useState(null);\n  const [assetAName, setAssetAName] = useState(null);\n  const [assetBName, setAssetBName] = useState(null);\n\n  const [time, setTime] = useState(null);\n\n  const [approved, setApproved] = useState(null);\n  const [balanceAssetA, setBalanceAssetA] = useState(null);\n  const [balanceAssetB, setBalanceAssetB] = useState(null);\n\n  const setUpWeb3 = async () => {\n    try {\n      const _web3 = await getWeb3();\n\n      const accounts = await _web3.eth.getAccounts();\n\n      const networkId = await _web3.eth.net.getId();\n      const deployedNetwork = PromController.networks[networkId];\n\n      setPromInstance(new _web3.eth.Contract(PromController.abi, deployedNetwork && deployedNetwork.address));\n      setWeb3(_web3);\n      setAccount(accounts[0]);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  };\n  setUpWeb3();\n  useEffect(() => {\n    if (assetAInstance) {\n      getAssetName(\"A\");\n    }\n    if (assetBInstance) {\n      getAssetName(\"B\");\n    }\n  }, [assetAInstance, assetBInstance]);\n\n  async function getAccount() {\n    await window.ethereum\n      .request({\n        method: \"eth_requestAccounts\",\n      })\n      .then((result) => {\n        setAccount(result[0]);\n      });\n  }\n  async function createTokenInstance(k) {\n    let assetInstance, decimals, assetName;\n\n    if ((k = \"A\")) {\n      assetInstance = new web3.eth.Contract(token.abi, assetA);\n    } else {\n      assetInstance = new web3.eth.Contract(token.abi, assetB);\n    }\n\n    decimals = await assetInstance.methods.decimals().call();\n    assetName = await assetInstance.methods.name().call();\n\n    if ((k = \"A\")) {\n      setAssetAInstance(assetInstance);\n      setAssetADeclimals(decimals);\n      setAssetBName(assetName);\n    } else {\n      setAssetAName(assetName);\n      setAssetBInstance(assetInstance);\n      setAssetBDeclimals(decimals);\n    }\n  }\n\n  async function checkBalance(k) {\n    if ((k = \"A\")) {\n      var balanceOf = await assetAInstance.methods.balanceOf(account).call();\n      setBalanceAssetA(balanceOf);\n    } else {\n      var balanceOf = await assetBInstance.methods.balanceOf(account).call();\n      setBalanceAssetB(balanceOf);\n    }\n  }\n\n  async function checkAllowance(k) {\n    let allo;\n    if ((k = \"A\")) {\n      allo = await assetAInstance.methods.allowance(account, promInstance._address).call();\n      if (allo >= amountA) {\n        setApproved(true);\n      } else {\n        setApproved(false);\n      }\n    } else {\n      allo = await assetBInstance.methods.allowance(account, promInstance._address).call();\n      if (allo >= amountB) {\n        setApproved(true);\n      } else {\n        setApproved(false);\n      }\n    }\n  }\n\n  async function approve(k) {\n    if ((k = \"A\")) {\n      await assetAInstance.methods\n        .approve(promInstance._address, (2 ** 256).toLocaleString(\"fullwide\", { useGrouping: false }))\n        .send({ from: account })\n        .then((result) => {\n          console.log(result);\n          setApproved(true);\n        });\n    } else {\n      await assetBInstance.methods\n        .approve(promInstance._address, (2 ** 256).toLocaleString(\"fullwide\", { useGrouping: false }))\n        .send({ from: account })\n        .then((result) => {\n          console.log(result);\n          setApproved(true);\n        });\n    }\n  }\n\n  return (\n    <Router>\n      <div class=\"App\">\n        <h1>Promise 🤝</h1>\n        <ConnectWallet getAccount={() => getAccount()} account={account} />\n        <Link to=\"/Create\">Create Promise</Link>\n        <br />\n        <Link to=\"/Find\">Find Promise</Link>\n        <Switch>\n          <Route\n            path=\"/Create\"\n            exact\n            render={(props) => (\n              <CreatePromise\n                web3={web3}\n                promInstance={promInstance}\n                assetA={assetA}\n                assetB={assetB}\n                amountB={amountB}\n                amountA={amountA}\n                time={time}\n                account={account}\n                approved={approved}\n                balanceAssetA={balanceAssetA}\n                assetADeclimals={assetADeclimals}\n                assetAInstance={assetAInstance}\n                setAssetA={(a) => setAssetA(a)}\n                setAssetB={(a) => setAssetB(a)}\n                setAmountA={(a) => setAmountA(a)}\n                setAmountB={(a) => setAmountB(a)}\n                setTime={(t) => setTime(t)}\n                approve={(k) => approve(k)}\n                createTokenInstance={(k) => createTokenInstance(k)}\n                checkAllowance={(k) => checkAllowance(k)}\n                checkBalance={(k) => checkBalance(k)}\n              />\n            )}\n          />\n          <Route\n            path=\"/Find\"\n            exact\n            render={(props) => (\n              <FindPromise\n                web3={web3}\n                promInstance={promInstance}\n                assetA={assetA}\n                assetB={assetB}\n                amountA={amountA}\n                amountB={amountB}\n                setAmountA={(a) => setAmountA(a)}\n                setAmountB={(a) => setAmountB(a)}\n                setAssetA={(a) => setAssetA(a)}\n                setAssetB={(a) => setAssetB(a)}\n                assetAInstance={assetAInstance}\n                assetBInstance={assetBInstance}\n                assetAName={assetAName}\n                assetBName={assetBName}\n                getAssetName={(k) => getAssetName(k)}\n                createTokenInstance={(k) => createTokenInstance(k)}\n                checkAllowance={(k) => checkAllowance(k)}\n                checkBalance={(k) => checkBalance(k)}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
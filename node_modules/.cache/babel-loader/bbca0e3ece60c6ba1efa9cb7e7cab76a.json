{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/pages/FindPromise.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\nexport default function FindPromise({\n  web3,\n  account,\n  promInstance,\n  assetA,\n  assetB,\n  amountA,\n  amountB,\n  setAssetA,\n  setAssetB,\n  setAmountA,\n  setAmountB,\n  assetAInstance,\n  assetBInstance,\n  assetAName,\n  assetBName,\n  assetADeclimals,\n  assetBDeclimals,\n  createTokenInstance,\n  checkAllowance,\n  checkBalance\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        pairID = _useState2[0],\n        setPairID = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        joinablePromises = _useState4[0],\n        setJoinablePromises = _useState4[1];\n\n  useEffect(() => {\n    if (web3) {\n      if (web3.utils.isAddress(assetA) && web3.utils.isAddress(assetB)) {\n        getAllPromises();\n        createTokenInstance(\"A\");\n        createTokenInstance(\"B\");\n      }\n    }\n  }, [assetA, assetB]);\n\n  async function getPairID() {\n    setPairID((await promInstance.methods.getJoinablePromises(assetA, assetB).call()));\n  }\n\n  async function joinPromise(id) {\n    await promInstance.methods.joinPromise(id).send({\n      from: account\n    }).then(result => {\n      console.log(\"created promise \" + result.hash);\n      setAssetA(null);\n      setAssetB(null);\n      setAmountA(null);\n      setAmountB(null);\n      setTime(null);\n    });\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await promInstance.methods.getJoinablePromises(assetA, assetB).call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await promInstance.methods.getPromise(a).call();\n      let singlePromise = {\n        _amountA: p[0],\n        _amountB: p[2],\n        _time: p[4],\n        _id: a\n      };\n      joinablePromises.push(singlePromise);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TokenAddressInput, {\n    setAssetA: a => setAssetA(a),\n    setAssetB: a => setAssetB(a),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(TableOfPromises, {\n    joinablePromises: joinablePromises,\n    assetAName: assetAName,\n    assetBName: assetBName,\n    assetADeclimals: assetADeclimals,\n    assetBDeclimals: assetBDeclimals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/pages/FindPromise.js"],"names":["React","useState","useEffect","TableOfPromises","TokenAddressInput","FindPromise","web3","account","promInstance","assetA","assetB","amountA","amountB","setAssetA","setAssetB","setAmountA","setAmountB","assetAInstance","assetBInstance","assetAName","assetBName","assetADeclimals","assetBDeclimals","createTokenInstance","checkAllowance","checkBalance","pairID","setPairID","joinablePromises","setJoinablePromises","utils","isAddress","getAllPromises","getPairID","methods","getJoinablePromises","call","joinPromise","id","send","from","then","result","console","log","hash","setTime","promiseIds","i","length","a","toString","p","getPromise","singlePromise","_amountA","_amountB","_time","_id","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\n\nexport default function FindPromise({\n  web3,\n  account,\n  promInstance,\n  assetA,\n  assetB,\n  amountA,\n  amountB,\n  setAssetA,\n  setAssetB,\n  setAmountA,\n  setAmountB,\n  assetAInstance,\n  assetBInstance,\n  assetAName,\n  assetBName,\n  assetADeclimals,\n  assetBDeclimals,\n  createTokenInstance,\n  checkAllowance,\n  checkBalance,\n}) {\n  const [pairID, setPairID] = useState(null);\n  const [joinablePromises, setJoinablePromises] = useState(null);\n\n  useEffect(() => {\n    if (web3) {\n      if (web3.utils.isAddress(assetA) && web3.utils.isAddress(assetB)) {\n        getAllPromises();\n        createTokenInstance(\"A\");\n        createTokenInstance(\"B\");\n      }\n    }\n  }, [assetA, assetB]);\n\n  async function getPairID() {\n    setPairID(await promInstance.methods.getJoinablePromises(assetA, assetB).call());\n  }\n\n  async function joinPromise(id) {\n    await promInstance.methods\n      .joinPromise(id)\n      .send({ from: account })\n      .then((result) => {\n        console.log(\"created promise \" + result.hash);\n        setAssetA(null);\n        setAssetB(null);\n        setAmountA(null);\n        setAmountB(null);\n        setTime(null);\n      });\n  }\n\n  async function getAllPromises() {\n    var promiseIds = await promInstance.methods.getJoinablePromises(assetA, assetB).call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await promInstance.methods.getPromise(a).call();\n\n      let singlePromise = {\n        _amountA: p[0],\n        _amountB: p[2],\n        _time: p[4],\n        _id: a,\n      };\n\n      joinablePromises.push(singlePromise);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n  return (\n    <div>\n      <TokenAddressInput setAssetA={(a) => setAssetA(a)} setAssetB={(a) => setAssetB(a)} />\n      <TableOfPromises\n        joinablePromises={joinablePromises}\n        assetAName={assetAName}\n        assetBName={assetBName}\n        assetADeclimals={assetADeclimals}\n        assetBDeclimals={assetBDeclimals}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
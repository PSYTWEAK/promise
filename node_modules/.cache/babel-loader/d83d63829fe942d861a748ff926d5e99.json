{"ast":null,"code":"var _jsxFileName = \"/Users/nanoissuperior/prom/client/src/components/PromiseInput.js\";\nimport React from \"react\";\nimport CreatePromiseButton from \"./CreatePromiseButton\";\nexport default function PromiseInput(props) {\n  async function convertTime(date) {\n    if (date.length === 7) {\n      new Date(\"2011-01-02\").getTime() / 1000;\n      var dateString = \"23/10/2015\"; // Oct 23\n\n      var dateParts = dateString.split(\"/\"); // month is 0-based, that's why we need dataParts[1] - 1\n\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]).getTime() / 1000;\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Your Asset address:\"), React.createElement(\"input\", {\n    placeholder: \"Contract address\",\n    onChange: event => {\n      props.setAssetA(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Your Asset amount:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"balance: \", props.balanceAssetA / Math.pow(10, props.assetADeclimals)), React.createElement(\"input\", {\n    placeholder: \"0.00\",\n    onChange: event => {\n      props.setAmountA(event.target.value * 1e18);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Participants Asset address:\"), React.createElement(\"input\", {\n    placeholder: \"Contract address\",\n    onChange: event => {\n      props.setAssetB(event.target.value * 1e18);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Participants Asset amount:\"), React.createElement(\"input\", {\n    placeholder: \"0.00\",\n    onChange: event => {\n      props.setAmountB(event.target.value * 1e18);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"time:\"), React.createElement(\"input\", {\n    placeholder: \"DD/MM/YYYY\",\n    onChange: event => {\n      props.setTime(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/components/PromiseInput.js"],"names":["React","CreatePromiseButton","PromiseInput","props","convertTime","date","length","Date","getTime","dateString","dateParts","split","dateObject","event","setAssetA","target","value","balanceAssetA","Math","pow","assetADeclimals","setAmountA","setAssetB","setAmountB","setTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,iBAAeC,WAAf,CAA2BC,IAA3B,EAAiC;AAC/B,QAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,UAAIC,IAAJ,CAAS,YAAT,EAAuBC,OAAvB,KAAmC,IAAnC;AACA,UAAIC,UAAU,GAAG,YAAjB,CAFqB,CAEU;;AAE/B,UAAIC,SAAS,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAhB,CAJqB,CAMrB;;AACA,UAAIC,UAAU,GAAG,IAAIL,IAAJ,CAAS,CAACG,SAAS,CAAC,CAAD,CAAnB,EAAwBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAvC,EAA0C,CAACA,SAAS,CAAC,CAAD,CAApD,EAAyDF,OAAzD,KAAqE,IAAtF;AACD;AACF;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBV,MAAAA,KAAK,CAACW,SAAN,CAAgBD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAab,KAAK,CAACc,aAAN,GAAsBC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAahB,KAAK,CAACiB,eAAnB,CAAnC,CATF,EAUE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,QAAQ,EAAGP,KAAD,IAAW;AACnBV,MAAAA,KAAK,CAACkB,UAAN,CAAiBR,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,IAAtC;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAhBF,EAiBE;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,QAAQ,EAAGH,KAAD,IAAW;AACnBV,MAAAA,KAAK,CAACmB,SAAN,CAAgBT,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,IAArC;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvBF,EAwBE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,QAAQ,EAAGH,KAAD,IAAW;AACnBV,MAAAA,KAAK,CAACoB,UAAN,CAAiBV,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,IAAtC;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA/BF,EAgCE;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,QAAQ,EAAGH,KAAD,IAAW;AACnBV,MAAAA,KAAK,CAACqB,OAAN,CAAcX,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF;AAyCD","sourcesContent":["import React from \"react\";\nimport CreatePromiseButton from \"./CreatePromiseButton\";\n\nexport default function PromiseInput(props) {\n  async function convertTime(date) {\n    if (date.length === 7) {\n      new Date(\"2011-01-02\").getTime() / 1000;\n      var dateString = \"23/10/2015\"; // Oct 23\n\n      var dateParts = dateString.split(\"/\");\n\n      // month is 0-based, that's why we need dataParts[1] - 1\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]).getTime() / 1000;\n    }\n  }\n  return (\n    <div>\n      <p>Your Asset address:</p>\n      <input\n        placeholder=\"Contract address\"\n        onChange={(event) => {\n          props.setAssetA(event.target.value);\n        }}\n      ></input>\n      <p>Your Asset amount:</p>\n      <p>balance: {props.balanceAssetA / Math.pow(10, props.assetADeclimals)}</p>\n      <input\n        placeholder=\"0.00\"\n        onChange={(event) => {\n          props.setAmountA(event.target.value * 1e18);\n        }}\n      ></input>\n      <p>Participants Asset address:</p>\n      <input\n        placeholder=\"Contract address\"\n        onChange={(event) => {\n          props.setAssetB(event.target.value * 1e18);\n        }}\n      ></input>\n      <p>Participants Asset amount:</p>\n      <input\n        placeholder=\"0.00\"\n        onChange={(event) => {\n          props.setAmountB(event.target.value * 1e18);\n        }}\n      ></input>\n      <br />\n      <p>time:</p>\n      <input\n        placeholder=\"DD/MM/YYYY\"\n        onChange={(event) => {\n          props.setTime(event.target.value);\n        }}\n      ></input>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/nanoissuperior/prom/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nanoissuperior/prom/client/src/pages/FindPromise.js\";\nimport React, { useState } from \"react\";\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\nexport default function FindPromise({\n  prom,\n  assetA,\n  assetB\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        pairID = _useState2[0],\n        setPairID = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        joinablePromises = _useState4[0],\n        setJoinablePromises = _useState4[1];\n\n  async function getPairID() {\n    setPairID((await prom.methods.getJoinablePromises(assetA, assetB).call()));\n  }\n\n  useEffect(() => {\n    if (assetB) {\n      if (assetBInstance) {\n        checkBalance(\"B\");\n        checkAllowance(\"B\");\n      } else if (web3.utils.isAddress(assetA)) {\n        createTokenInstance(\"B\");\n      }\n    }\n  }, [assetA, amountA]);\n\n  async function getAllPromises() {\n    var promiseIds = await prom.methods.getJoinablePromises().call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await prom.methods.getPromise(a).call();\n      joinablePromises.push(p);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TokenAddressInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(TableOfPromises, {\n    joinablePromises: joinablePromises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/nanoissuperior/prom/client/src/pages/FindPromise.js"],"names":["React","useState","TableOfPromises","TokenAddressInput","FindPromise","prom","assetA","assetB","pairID","setPairID","joinablePromises","setJoinablePromises","getPairID","methods","getJoinablePromises","call","useEffect","assetBInstance","checkBalance","checkAllowance","web3","utils","isAddress","createTokenInstance","amountA","getAllPromises","promiseIds","i","length","a","toString","p","getPromise","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAArB,EAA+C;AAAA,oBAChCN,QAAQ,CAAC,IAAD,CADwB;AAAA;AAAA,QACrDO,MADqD;AAAA,QAC7CC,SAD6C;;AAAA,qBAEZR,QAAQ,CAAC,IAAD,CAFI;AAAA;AAAA,QAErDS,gBAFqD;AAAA,QAEnCC,mBAFmC;;AAI5D,iBAAeC,SAAf,GAA2B;AACzBH,IAAAA,SAAS,EAAC,MAAMJ,IAAI,CAACQ,OAAL,CAAaC,mBAAb,CAAiCR,MAAjC,EAAyCC,MAAzC,EAAiDQ,IAAjD,EAAP,EAAT;AACD;;AACDC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIT,MAAJ,EAAY;AACV,UAAIU,cAAJ,EAAoB;AAClBC,QAAAA,YAAY,CAAC,GAAD,CAAZ;AACAC,QAAAA,cAAc,CAAC,GAAD,CAAd;AACD,OAHD,MAGO,IAAIC,IAAI,CAACC,KAAL,CAAWC,SAAX,CAAqBhB,MAArB,CAAJ,EAAkC;AACvCiB,QAAAA,mBAAmB,CAAC,GAAD,CAAnB;AACD;AACF;AACF,GATQ,EASN,CAACjB,MAAD,EAASkB,OAAT,CATM,CAAT;;AAUA,iBAAeC,cAAf,GAAgC;AAC9B,QAAIC,UAAU,GAAG,MAAMrB,IAAI,CAACQ,OAAL,CAAaC,mBAAb,GAAmCC,IAAnC,EAAvB;AACA,QAAIL,gBAAgB,GAAG,EAAvB;;AAEA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAIE,CAAC,GAAGH,UAAU,CAACC,CAAD,CAAV,CAAcG,QAAd,EAAR;AACA,UAAIC,CAAC,GAAG,MAAM1B,IAAI,CAACQ,OAAL,CAAamB,UAAb,CAAwBH,CAAxB,EAA2Bd,IAA3B,EAAd;AAEAL,MAAAA,gBAAgB,CAACuB,IAAjB,CAAsBF,CAAtB;AACD;;AAEDpB,IAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,gBAAgB,EAAEA,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState } from \"react\";\n\nimport TableOfPromises from \"../components/TableOfPromises.js\";\nimport TokenAddressInput from \"../components/TokenAddressInput.js\";\n\nexport default function FindPromise({ prom, assetA, assetB }) {\n  const [pairID, setPairID] = useState(null);\n  const [joinablePromises, setJoinablePromises] = useState(null);\n\n  async function getPairID() {\n    setPairID(await prom.methods.getJoinablePromises(assetA, assetB).call());\n  }\n  useEffect(() => {\n    if (assetB) {\n      if (assetBInstance) {\n        checkBalance(\"B\");\n        checkAllowance(\"B\");\n      } else if (web3.utils.isAddress(assetA)) {\n        createTokenInstance(\"B\");\n      }\n    }\n  }, [assetA, amountA]);\n  async function getAllPromises() {\n    var promiseIds = await prom.methods.getJoinablePromises().call();\n    var joinablePromises = [];\n\n    for (var i = 0; i < promiseIds.length; i++) {\n      var a = promiseIds[i].toString();\n      var p = await prom.methods.getPromise(a).call();\n\n      joinablePromises.push(p);\n    }\n\n    setJoinablePromises(joinablePromises);\n  }\n  return (\n    <div>\n      <TokenAddressInput />\n      <TableOfPromises joinablePromises={joinablePromises} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}